name: CI

# # Compile only on changes to src folder
# on:
#   push:
#     paths:
#     - 'src/**'
#   pull_request:
#     paths:
#     - 'src/**'
on: [push]
env:
  YUM_DEPS_CMD: |
    yum install -y centos-release-scl epel-release yum-utils
    curl -sSL https://raw.githubusercontent.com/wwfxuk/centos-vault-scl/master/activate.sh | bash
    yum install -y cmake3 devtoolset-6

jobs:
  compile-pybind11:
    name: Compile PyBind11
    runs-on: ubuntu-latest
    # container: aswf/ci-base:2020  # 3 mins to setup lol
    container: centos:7
    timeout-minutes: 4

    steps:
    - name: Checkout PyBind11
      uses: actions/checkout@v2
      with:
        repository: pybind/pybind11
        ref: v2.4.3
        path: pybind11/src

    - name: Install PyBind11
      working-directory: pybind11/src
      run: |
        ${{ env.YUM_DEPS_CMD }}

        scl enable devtoolset-6 - << EOF
        cmake3 -DCMAKE_INSTALL_PREFIX="$(readlink -f ..)" -DPYBIND11_INSTALL=1 -DPYBIND11_TEST=0
        make -j "$(nproc)"
        make install
        EOF

    - name: Upload headers
      uses: actions/upload-artifact@v1
      with:
        name: pybind11-headers
        path: pybind11/include

  build:
    name: "Build Plugin for ${{ matrix.version }}"
    runs-on: ubuntu-latest
    needs: compile-pybind11
    container: centos:7
    strategy:
      matrix:
        version: ["3.1v2", "3.5v2"]

    steps:
    - name: Download PyBind11 Headers
      uses: actions/download-artifact@v1
      with:
        name: pybind11-headers
        path: pybind11/include

    - uses: actions/checkout@v2

    - name: Build plugin
      run: |
        set -x
        PYBIND_INCLUDE_DIR="$(readlink -e pybind11/include)"

        ${{ env.YUM_DEPS_CMD }}

        # Install Katana
        mkdir katana
        KATANA_LOCATION="$(readlink -e katana)"
        curl -sSL "http://thefoundry.s3.amazonaws.com/products/katana/releases/${{ matrix.version }}/Katana${{ matrix.version }}-linux-x86-release-64.tgz" \
        | tar -xz -C installer -O katana_files.tar.gz | tar -xz -C "$KATANA_LOCATION"

        KATANA_PYTHON="$(readlink -e ${KATANA_LOCATION}/bin/python2.7/include/python2.7)"
        PYTHON_LIB="$(readlink -e ${KATANA_LOCATION}/bin/python2.7/lib)"

        mkdir build
        cd build
        scl enable devtoolset-6 - << EOF
        command -v cmake3
        echo cmake3 ../src \
          -DPYBIND_INCLUDE_DIR="${PYBIND_INCLUDE_DIR}" \
          -DPYTHON_INCLUDE_DIR="${KATANA_PYTHON}" \
          -DPYTHON_LIB="${PYTHON_LIB}" \
          -DKATANA_LOCATION="${KATANA_LOCATION}" \
        && echo cmake3 --build . --target install
        EOF

        # # Alternatively, setup custom install destination using -DCMAKE_INSTALL_PREFIX
        # mkdir -p "${INSTALL_PREFIX}"
        # scl enable devtoolset-6 - << EOF
        # cmake3 ../src \
        #     -DPYBIND_INCLUDE_DIR=${PYBIND_INCLUDE_DIR} \
        #     -DPYTHON_INCLUDE_DIR=${KATANA_PYTHON} \
        #     -DPYTHON_LIB=${PYTHON_LIB} \
        #     -DKATANA_LOCATION=${KATANA_LOCATION} \
        #     -DCMAKE_INSTALL_PREFIX="${INSTALL_PREFIX}" \
        # && cmake3 --build . --target install
        # EOF
